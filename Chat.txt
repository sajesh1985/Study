<div data-rbd-droppable-id="section1" data-rbd-droppable-context-id="1" style="border: 1px solid gray; padding: 1rem; width: 200px; min-height: 200px;"><h4>Available Items</h4><div data-rbd-draggable-context-id="1" data-rbd-draggable-id="item-1" tabindex="0" role="button" aria-describedby="rbd-hidden-text-1-hidden-text-1" data-rbd-drag-handle-draggable-id="item-1" data-rbd-drag-handle-context-id="1" draggable="false" style="padding: 8px; margin: 4px 0px; background-color: rgb(238, 238, 238);">Item 1</div><div data-rbd-draggable-context-id="1" data-rbd-draggable-id="item-2" tabindex="0" role="button" aria-describedby="rbd-hidden-text-1-hidden-text-1" data-rbd-drag-handle-draggable-id="item-2" data-rbd-drag-handle-context-id="1" draggable="false" style="padding: 8px; margin: 4px 0px; background-color: rgb(238, 238, 238);">Item 2</div><div data-rbd-draggable-context-id="1" data-rbd-draggable-id="item-3" tabindex="0" role="button" aria-describedby="rbd-hidden-text-1-hidden-text-1" data-rbd-drag-handle-draggable-id="item-3" data-rbd-drag-handle-context-id="1" draggable="false" style="padding: 8px; margin: 4px 0px; background-color: rgb(238, 238, 238);">Item 3</div></div>

export const ReportBuilder = () => {
    const initialItems = [
        { id: 'item-1', content: 'Item 1' },
        { id: 'item-2', content: 'Item 2' },
        { id: 'item-3', content: 'Item 3' },
    ];
    const [availableItems, setAvailableItems] = useState(initialItems);
    //const availableItems =initialItems;
    const [droppedItems, setDroppedItems] = useState([]);

    const onDragEnd = (result:any) => {
        const { source, destination } = result;

        // Dropped outside any droppable
        if (!destination) return;

        // Move within dropped area
        if (source.droppableId === 'section2' && destination.droppableId === 'section2') {
            const reordered = Array.from(droppedItems);
            const [movedItem] = reordered.splice(source.index, 1);
            reordered.splice(destination.index, 0, movedItem);
            setDroppedItems(reordered);
            return;
        }

        // Drag from section1 to section2
        if (source.droppableId === 'section1' && destination.droppableId === 'section2') {
            const draggedItem = availableItems[source.index];
            const updatedAva = Array.from(availableItems);
            updatedAva.splice(source.index,1);
            setAvailableItems(updatedAva);

            const updDropped = Array.from(droppedItems);
            updDropped.splice(destination.index,0,draggedItem);
            setDroppedItems(updDropped);
            return;
        }
    };

    return (
        <div style={{ display: 'flex', gap: '2rem', padding: '2rem' }}>
            <DragDropContext onDragEnd={onDragEnd}>
                {/* Section 1: Draggable source */}
                <Droppable droppableId="section1" isDropDisabled>
                    {(provided:any) => (
                        <div
                            ref={provided.innerRef}
                            {...provided.droppableProps}
                            style={{ border: '1px solid gray', padding: '1rem', width: '200px', minHeight: '200px' }}
                        >
                            <h4>Available Items</h4>
                            {availableItems.map((item, index) => (
                                <Draggable key={item.id} draggableId={item.id} index={index}>
                                    {(provided:any) => (
                                        <div
                                            ref={provided.innerRef}
                                            {...provided.draggableProps}
                                            {...provided.dragHandleProps}
                                            style={{
                                                padding: '8px',
                                                margin: '4px 0',
                                                backgroundColor: '#eee',
                                                ...provided.draggableProps.style,
                                            }}
                                        >
                                            {item.content}
                                        </div>
                                    )}
                                </Draggable>
                            ))}
                            {provided.placeholder}
                        </div>
                    )}
                </Droppable>

                {/* Section 2: Droppable and reorderable */}
                <Droppable droppableId="section2">
                    {(provided:any) => (
                        <div
                            ref={provided.innerRef}
                            {...provided.droppableProps}
                            style={{ border: '1px solid gray', padding: '1rem', width: '200px', minHeight: '200px' }}
                        >
                            <h4>Dropped Items</h4>
                            {droppedItems.map((item, index) => (
                                <Draggable key={item.id} draggableId={item.id} index={index}>
                                    {(provided:any) => (
                                        <div
                                            ref={provided.innerRef}
                                            {...provided.draggableProps}
                                            {...provided.dragHandleProps}
                                            style={{
                                                padding: '8px',
                                                margin: '4px 0',
                                                backgroundColor: '#cce5ff',
                                                ...provided.draggableProps.style,
                                            }}
                                        >
                                            {item.content}
                                        </div>
                                    )}
                                </Draggable>
                            ))}
                            {provided.placeholder}
                        </div>
                    )}
                </Droppable>
            </DragDropContext>
        </div>
    );

};



import React from 'react';
import { Button, H2, H4, P } from '@spglobal/react-components';

import { useChatRD } from '../../context/chatrd';
import { Interaction } from '../../types/interaction';
import { ChatMessage } from './ChatMessage/ChatMessage';
import { Page } from '../_common/Page/Page';
import { QuestionInput } from '../_common/QuestionInput/QuestionInput';
import { Timeline } from './Chat.styles';
import {
  ExampleBoxWrapper,
  FaqDesclimer,
  Status,
  Header,
  ChatRDModel,
  Suggestions,
  SuggestionsChip,
  NewContent,
  Title
} from '../Landing/Landing.styles';
import { Purpose, Size } from '@spglobal/koi-helpers';
import { Logo } from '../_common/Logo/Logo';
import { ChatHomeSlider } from './ChatHomeSlider';
import { LandingSlider } from '../Landing/LandingSlider';
export const Chat: React.FC = () => {
  const { interactions, newInteraction, isLoading,chatHistory,askQuestion } = useChatRD();
  const [dValue, setDValue] = React.useState<string>('');
  const myRef = React.useRef<HTMLInputElement>(null);
  //const topElementRef = React.useRef(null);
  //const bottomElementRef = React.useRef(null);
  
  const addQuestion = (
    fullQuestion: string,
    startSubQuestion?: number,
    endSubQuestion?: number
  ) => {
    document.body.classList.add('focuseTemp');
    const input = myRef?.current;
    setDValue(fullQuestion);
    setTimeout(() => {
      input.focus();
      startSubQuestion &&
        endSubQuestion &&
        input.setSelectionRange(startSubQuestion, endSubQuestion);
    }, 2000);

    setTimeout(() => document.body.classList.remove('focuseTemp'), 3000);
  };

  const children = React.useMemo(() => {
   interactions.map((interaction: Interaction) => (
    <>
      {interaction && <ChatMessage key={interaction.id} interaction={interaction} />}
    </>
  ));
  },[interactions]);

  React.useLayoutEffect(() => {
    setTimeout(
      () =>{
        interactions.length > 0 
        //scrollToBottomRef?.current.scrollIntoView({ behavior: 'smooth', block: 'start' });
        },
      700
    );
  }, [isLoading, interactions.length]);

  React.useEffect(() => {
    if(interactions.length > 0)
    {
      if(chatHistory == "New")
      {
        setDValue('');
      }
      else if(chatHistory == "History")
      {
        setDValue(interactions[0].req.toString());
      }
      else if(chatHistory == "Existing")
      {
        setDValue(interactions[interactions.length-1].req.toString());
      }
    }
  },[isLoading, interactions.length]);

  const footer = (
    <>
    { sessionStorage.getItem('EventStream') == '1' &&  <QuestionInput
      onSearch={askQuestion}
      onSearchValueUpdate={(searchText) => setDValue(searchText)}
      ref={myRef}
      domUpdateValue={dValue}
    />}
    { sessionStorage.getItem('EventStream') == '0' &&  <QuestionInput
      onSearch={newInteraction}
      onSearchValueUpdate={(searchText) => setDValue(searchText)}
      ref={myRef}
      domUpdateValue={dValue}
    />}
    </>
  );
  
  const [howToUse, setHowToUse] = React.useState<boolean>(false);
  //const { t } = useTranslation(['chatiq_main']);
  const ExampleQuestions = (
    <>
    
      <Header>
        <Logo />
        <Status>STATUS: IN TRAINING</Status>
        <Title>Here are some ways I can help you today:</Title>
      </Header>
      <ExampleBoxWrapper>
        <ChatHomeSlider clicked={addQuestion}/>
      </ExampleBoxWrapper>
      <FaqDesclimer>
        <Button
          size={Size.MEDIUM}
          purpose={Purpose.LINK}
          onClick={() => setHowToUse(true)}
          leftIcon={
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="14"
              height="19"
              viewBox="0 0 14 19"
              fill="none"
            >
              <path
                fillRule="evenodd"
                clipRule="evenodd"
                d="M0 0H10.9767V7.61783C10.9767 7.913 10.7374 8.15229 10.4423 8.15229C10.1471 8.15229 9.90779 7.913 9.90779 7.61783V1.06893H1.06893V14.8077H2.91527C3.21045 14.8077 3.44974 15.047 3.44974 15.3422C3.44974 15.6374 3.21045 15.8766 2.91527 15.8766H0V0Z"
                fill="var(--color-text-link)"
              />
              <path
                fillRule="evenodd"
                clipRule="evenodd"
                d="M2.36841 3.12473C2.36841 2.82956 2.6077 2.59027 2.90287 2.59027H8.07392C8.36909 2.59027 8.60838 2.82956 8.60838 3.12473C8.60838 3.41991 8.36909 3.6592 8.07392 3.6592H2.90287C2.6077 3.6592 2.36841 3.41991 2.36841 3.12473ZM2.36841 5.45598C2.36841 5.1608 2.6077 4.92151 2.90287 4.92151H8.07392C8.36909 4.92151 8.60838 5.1608 8.60838 5.45598C8.60838 5.75115 8.36909 5.99044 8.07392 5.99044H2.90287C2.6077 5.99044 2.36841 5.75115 2.36841 5.45598ZM2.36841 7.78722C2.36841 7.49204 2.6077 7.25275 2.90287 7.25275H8.07392C8.36909 7.25275 8.60838 7.49204 8.60838 7.78722C8.60838 8.0824 8.36909 8.32168 8.07392 8.32168H2.90287C2.6077 8.32168 2.36841 8.0824 2.36841 7.78722ZM2.36841 10.14C2.36841 9.84487 2.6077 9.60558 2.90287 9.60558H4.59626C4.89143 9.60558 5.13072 9.84487 5.13072 10.14C5.13072 10.4352 4.89143 10.6745 4.59626 10.6745H2.90287C2.6077 10.6745 2.36841 10.4352 2.36841 10.14Z"
                fill="var(--color-text-link)"
              />
              <path
                fillRule="evenodd"
                clipRule="evenodd"
                d="M9.15357 17.3441C10.9949 17.3441 12.4876 15.8514 12.4876 14.0101C12.4876 12.1688 10.9949 10.6761 9.15357 10.6761C7.31224 10.6761 5.81955 12.1688 5.81955 14.0101C5.81955 15.8514 7.31224 17.3441 9.15357 17.3441ZM9.15357 18.475C11.6194 18.475 13.6184 16.476 13.6184 14.0101C13.6184 11.5442 11.6194 9.54525 9.15357 9.54525C6.6877 9.54525 4.68872 11.5442 4.68872 14.0101C4.68872 16.476 6.6877 18.475 9.15357 18.475Z"
                fill="var(--color-text-link)"
              />
              <path
                fillRule="evenodd"
                clipRule="evenodd"
                d="M9.15394 13.1362C9.47717 13.1362 9.73921 13.3983 9.73921 13.7215V15.755C9.73921 16.0782 9.47717 16.3403 9.15394 16.3403C8.8307 16.3403 8.56866 16.0782 8.56866 15.755V13.7215C8.56866 13.3983 8.8307 13.1362 9.15394 13.1362Z"
                fill="var(--color-text-link)"
              />
              <path
                d="M9.7389 12.2652C9.7389 12.5884 9.47687 12.8504 9.15363 12.8504C8.83039 12.8504 8.56836 12.5884 8.56836 12.2652C8.56836 11.9419 8.83039 11.6799 9.15363 11.6799C9.47687 11.6799 9.7389 11.9419 9.7389 12.2652Z"
                fill="var(--color-text-link)"
              />
            </svg>
          }
        >
          How to use ChatRD
        </Button>
        <Button
          size={Size.MEDIUM}
          purpose={Purpose.LINK}
          onClick={() => newInteraction('ChatRD Legal Disclaimer')}
          leftIcon={
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="15"
              height="15"
              viewBox="0 0 15 15"
              fill="none"
            >
              <path
                fillRule="evenodd"
                clipRule="evenodd"
                d="M7.0786 12.7858C9.99786 12.7858 12.3644 10.4192 12.3644 7.49999C12.3644 4.58073 9.99786 2.21421 7.0786 2.21421C4.15935 2.21421 1.79282 4.58073 1.79282 7.49999C1.79282 10.4192 4.15935 12.7858 7.0786 12.7858ZM7.0786 14.5786C10.988 14.5786 14.1572 11.4094 14.1572 7.49999C14.1572 3.59059 10.988 0.421387 7.0786 0.421387C3.1692 0.421387 0 3.59059 0 7.49999C0 11.4094 3.1692 14.5786 7.0786 14.5786ZM7.07904 6.11451C7.5915 6.11451 8.00693 6.52994 8.00693 7.0424V10.2663C8.00693 10.7788 7.5915 11.1942 7.07904 11.1942C6.56658 11.1942 6.15115 10.7788 6.15115 10.2663V7.0424C6.15115 6.52994 6.56658 6.11451 7.07904 6.11451ZM7.07871 5.66144C7.59117 5.66144 8.0066 5.246 8.0066 4.73354C8.0066 4.22108 7.59117 3.80565 7.07871 3.80565C6.56625 3.80565 6.15082 4.22108 6.15082 4.73354C6.15082 5.246 6.56625 5.66144 7.07871 5.66144Z"
                fill="var(--color-text-link)"
              />
            </svg>
          }
        >
          Legal disclaimer
        </Button>
      </FaqDesclimer>
    </>
  );

  const HowToUseChatRD = (
    <NewContent>
      <div>
        <Logo leftAligned={true} onClick={() => setHowToUse(false)} />
        <H2 className="spg-mt-xl">
	 A generative AI chatbot powered by S&P Global Ratings <br/> data and research from S&P Global Market Intelligence. 
        </H2>
        <LandingSlider />
      </div>
      <div>
        <H2>Try a Suggestion</H2>
        <Suggestions>
          <SuggestionsChip
            onClick={() => addQuestion("What's the most recent action for Apple?")}
          >
            What's the most recent action for Apple?
          </SuggestionsChip>
          <SuggestionsChip
            onClick={() => addQuestion('What ratings criteria is applied to Exxon?')}
          >
            What ratings criteria is applied to Exxon?
          </SuggestionsChip>
          <SuggestionsChip onClick={() => addQuestion('Show me the latest S&P Research on Aerospace')}>
            Show me the latest S&P Research on Aerospace
          </SuggestionsChip>
          <SuggestionsChip onClick={() => addQuestion("Provide me a SWOT Analysis for Tesla")}>
            Provide me a SWOT Analysis for Tesla
          </SuggestionsChip>
          <SuggestionsChip onClick={() => addQuestion('Show me a list of recent Ratings Actions for Financial Institutions')}>
            Show me a list of recent Ratings Actions for Financial Institutions 
          </SuggestionsChip>
        </Suggestions>
      </div>
      <div>
        <H2>
          About Chat<span>RD</span>&apos;s Model
        </H2>
        <ChatRDModel>
          <div className="darkImage" style={{ background: '#1B1B1B' }}>
            <img src={require('../../assets/images/chatIQModal.svg')} />
          </div>
          <div className="lightImage" style={{ background: '#E9E9E9' }}>
            <img src={require('../../assets/images/chatIQModal.svg')} />
          </div>
          <div>
            <H4>
            The ChatRD model is trained on data from S&P Global's Rating credit ratings data and research. Currently
              the model can answer questions about{' '}
            </H4>
            <ul>
              <li>Issuers (all sectors & geography)</li>
              <li>Securities (all sectors & geography)</li>
              <li>Macroeconomics</li>
              <li>Industries</li>
              <li>Ratings Methodology & Criteria</li>
            </ul>
            <P>
              A complete list of data and API services used by ChatRD is available upon request.
            </P>
          </div>
        </ChatRDModel>
      </div>
    </NewContent>
  );

<div class="ui-iggrid-scrolldiv ui-widget-content" data-scroll="true" data-onedirection="true" style="overflow-y: hidden; overflow-x: auto;"> <div data-part="snlSimpleGrid" style="visibility: visible;"><div id="recentDevGrid_i2_grid_table_container" class="mi-grid ui-widget ui-helper-clearfix ui-corner-all ui-iggrid" style="position : relative ;width:900px; overflow: hidden;"><div id="recentDevGrid_i2_grid_table_mainFixedContainer" class="ui-iggrid-fixedcontainer ui-iggrid-fixedcontainer-left" style="overflow: hidden; position: relative; float: left; left: 0; width:200px;"><div id="recentDevGrid_i2_grid_table_fixedHeaderContainer" class="ui-widget-header ui-helper-reset" style="overflow: hidden; position: relative;"><table id="recentDevGrid_i2_grid_table_headers_fixed" class="ui-iggrid-headertable fixed-table" style="width: 200px; table-layout: fixed;"><thead><tr style="height: 47.9861px;"><th id="recentDevGrid_i2_grid_table_RT_INSTRUMENT_NAME" class="ui-iggrid-header ui-widget-header ui-state-default" data-column="RT_INSTRUMENT_NAME" style="width: 200px;padding-right:19px;" rowspan="2"><span class="ui-iggrid-headertext">DESCRIPTION</span></th></tr></thead><colgroup><col style="width: 200px"></colgroup></table></div><div id="recentDevGrid_i2_grid_table_fixedBodyContainer" style="overflow: hidden; position: relative;"><table id="recentDevGrid_i2_grid_table_fixed" class="ui-iggrid-table ui-widget-content fixed-table" style="width: 200px; table-layout: fixed; height: 60.4167px;"><colgroup><col style="width: 200px"></colgroup><tbody class="ui-widget-content ui-iggrid-tablebody ui-ig-record ui-iggrid-record"><tr data-row="0" data-primarykey="0" style="height: 30.2083px;"><td data-colkey="RT_INSTRUMENT_NAME" style=";height:23px;;padding-right:19px;" class=""><a href="#ratingsdirect/rdSecurityDetails?Id=4041896&amp;InsSymbol=1513003&amp;SecSymbol=5097428" target="_blank">CAD22 mil 2.00% bank ln due 03/13/2034</a></td></tr><tr data-row="1" data-primarykey="1" style="height: 30.2083px;"><td data-colkey="RT_INSTRUMENT_NAME" style=";height:23px;;padding-right:19px;" class=""><a href="#ratingsdirect/rdSecurityDetails?Id=4041896&amp;InsSymbol=1513003&amp;SecSymbol=5097428" target="_blank">CAD22 mil 2.00% bank ln due 03/13/2034</a></td></tr></tbody></table></div><div id="recentDevGrid_i2_grid_table_fixedContainerScroller" style="height:10px;overflow: hidden; position: relative;"><table class="ui-iggrid-footertable ui-widget-footer fixed-table" style="table-layout: fixed; white-space: nowrap; width: 300px;"><colgroup><col style="width:300px"></colgroup><tfoot></tfoot></table></div></div><div id="recentDevGrid_i2_grid_table_relativeContainer" class="ui-widget-header ui-helper-reset" style="overflow: hidden; position: relative; white-space: nowrap; width: 698px;"><table id="recentDevGrid_i2_grid_table_headers" class="ui-iggrid-headertable" style=";width:751px;;"><colgroup><col><col><col><col style="width: 100px"><col style="width: 100px"><col style="width: 100px"></colgroup><thead><tr style=";height:24px;"><th id="recentDevGrid_i2_grid_table_DEBT_TYPE_CODE" class="ui-iggrid-header ui-widget-header ui-state-default" data-column="DEBT_TYPE_CODE" rowspan="2"><span class="ui-iggrid-headertext">Debt Type</span></th><th id="recentDevGrid_i2_grid_table_RATING_TYPE_CODE" class="ui-iggrid-header ui-widget-header ui-state-default" data-column="RATING_TYPE_CODE" rowspan="2"><span class="ui-iggrid-headertext">Rating Type</span></th><th id="recentDevGrid_i2_grid_table_RT_RATING_ACTION_WORD" class="ui-iggrid-header ui-widget-header ui-state-default" data-column="RT_RATING_ACTION_WORD" rowspan="2"><span class="ui-iggrid-headertext">Action</span></th><th id="recentDevGrid_i2_grid_table_RT_RATING_DATE" class="ui-iggrid-header ui-widget-header ui-state-default" data-column="RT_RATING_DATE" style="width: 100px" rowspan="2"><span class="ui-iggrid-headertext">Action Date</span></th><th id="recentDevGrid_i2_grid_table_" class="ui-iggrid-header ui-widget-header ui-state-default ui-iggrid-multiheader-cell" colspan="2" data-column="" style=";padding-right:19px;"><span class="ui-iggrid-headertext">RATING | CREDITWATCH/OUTLOOK</span></th></tr><tr style=";height:24px;"><th id="recentDevGrid_i2_grid_table_CURRENT_RATINGS" class="ui-iggrid-header ui-widget-header ui-state-default" data-column="CURRENT_RATINGS" style="width: 100px" rowspan="1"><span class="ui-iggrid-headertext">Current</span></th><th id="recentDevGrid_i2_grid_table_PRIOR_RATINGS" class="ui-iggrid-header ui-widget-header ui-state-default" data-column="PRIOR_RATINGS" style="width: 100px;padding-right:19px;" rowspan="1"><span class="ui-iggrid-headertext">Prior</span></th></tr></thead></table></div><div id="recentDevGrid_i2_grid_table_scroll" class="ui-iggrid-scrolldiv ui-widget-content fixed-grid-scroll" style="overflow-x: hidden; overflow-y: auto;"><table id="recentDevGrid_i2_grid_table" class="ui-iggrid-table ui-widget-content ui-iggrid-unfixed-table-left" style="table-layout: fixed; width: 750px; height: 60.4167px;"><colgroup><col><col><col><col style="width: 100px"><col style="width: 100px"><col style="width: 100px"></colgroup><tbody class="ui-widget-content ui-iggrid-tablebody ui-ig-record ui-iggrid-record"><tr data-row="0" data-primarykey="0" style="height: 30.2083px;"><td data-colkey="DEBT_TYPE_CODE" style=";height:23px;" class="">Senior Subordinated</td><td data-colkey="RATING_TYPE_CODE" style=";height:23px;" class="">Local Currency ST</td><td data-colkey="RT_RATING_ACTION_WORD" style=";height:23px;" class="">New Rating</td><td data-colkey="RT_RATING_DATE" style=";height:23px;" class="">09-10-2024 10:57 AM</td><td data-colkey="CURRENT_RATINGS" style=";height:23px;" class="">A-1 </td><td data-colkey="PRIOR_RATINGS" style=";height:23px;;padding-right:19px;" class="">New </td></tr><tr data-row="1" data-primarykey="1" style="height: 30.2083px;"><td data-colkey="DEBT_TYPE_CODE" style=";height:23px;" class="">Senior Subordinated</td><td data-colkey="RATING_TYPE_CODE" style=";height:23px;" class="">Local Currency LT</td><td data-colkey="RT_RATING_ACTION_WORD" style=";height:23px;" class="">New Rating</td><td data-colkey="RT_RATING_DATE" style=";height:23px;" class="">09-10-2024 10:57 AM</td><td data-colkey="CURRENT_RATINGS" style=";height:23px;" class="">BB+ </td><td data-colkey="PRIOR_RATINGS" style=";height:23px;;padding-right:19px;" class="">New </td></tr></tbody></table></div><div id="recentDevGrid_i2_grid_table_hscroller_container" style="position:relative;height:10px;overflow:hidden;"><div id="recentDevGrid_i2_grid_table_hscroller" style="width: 100%; position: absolute; bottom: 0px; overflow-x: scroll; overflow-y:hidden"><div id="recentDevGrid_i2_grid_table_hscroller_inner" style="height:1px;left:0px;width:750px;"></div></div></div><div id="recentDevGrid_i2_grid_table_pager" class="ui-widget ui-iggrid-pager ui-helper-clearfix ui-corner-bottom ui-widget-header ui-iggrid-footer"><div class="ui-helper-clearfix ui-iggrid-pagesizedropdowncontainer"><div class="ui-iggrid-results"><span class="ui-iggrid-pagesizelabel">Show</span><select id="recentDevGrid_i2_grid_table_page_size_selector" class="ui-igedit ui-igedit-container ui-widget ui-corner-all" style="width: 70px;"><option value="5" selected="">5</option></select><span class="ui-iggrid-pagesizelabel">records</span></div></div><span class="ui-iggrid-pagerrecordslabel ui-iggrid-results">1 - 2 of 2  records</span><div class="ui-iggrid-paging"><div class="ui-iggrid-firstpage ui-iggrid-paging-item ui-state-default ui-corner-left ui-state-disabled" data-page="1" style="width: 6px"><span class="ui-iggrid-pageimg ui-iggrid-firstpageimgdisabled ui-icon ui-icon-arrowstop-1-w"></span></div><div id="recentDevGrid_i2_grid_table_prev_page" class="ui-iggrid-prevpage ui-iggrid-paging-item ui-state-default"><span class="ui-iggrid-prevpagelabel ui-state-disabled">Prev</span><span class="ui-iggrid-pageimg ui-iggrid-prevpageimgdisabled ui-icon ui-icon-triangle-1-w ui-state-disabled"></span></div><ul class="ui-helper-reset ui-iggrid-pagelist ui-iggrid-paging-item"><li class="ui-iggrid-pagecurrent ui-corner-all ui-state-active"><a class="ui-iggrid-linkcurrent" data-page="1" href="javascript:undefined;">1</a></li></ul><div id="recentDevGrid_i2_grid_table_next_page" class="ui-iggrid-nextpage ui-iggrid-paging-item ui-state-default"><span class="ui-iggrid-nextpagelabel ui-state-disabled">Next</span><span class="ui-iggrid-pageimg ui-iggrid-nextpageimgdisabled ui-icon ui-icon-triangle-1-e ui-state-disabled"></span></div><div class="ui-iggrid-lastpage ui-iggrid-paging-item ui-state-default ui-corner-left ui-state-disabled" data-page="1" style="width: 6px"><span class="ui-iggrid-pageimg ui-iggrid-lastpageimgdisabled ui-icon ui-icon-arrowstop-1-e"></span></div></div></div></div></div> </div>

  return (
    <Page footer={footer}>
      {howToUse ? HowToUseChatRD : ExampleQuestions}
      <Timeline>{children}</Timeline>
    </Page>
  );
};
